import { ApiError } from "../utils/ApiError.js";
import { ApiResponse } from "../utils/ApiResponse.js";
import { asyncHandler } from "../utils/async-handler.js";
import { GoogleGenAI, Type } from "@google/genai";
import { getImageFromUnsplash } from "../utils/weatherAPi.service.js";

const ai = new GoogleGenAI({});

const getSuggestedTrips = asyncHandler(async (req, res) => {
  console.log("Generating suggested trips...");

  try {
    const aiResponse = await ai.models.generateContent({
      model: "gemini-2.0-flash-exp",
      contents: `You are a travel expert. Generate a list of 10 famous and must-visit travel destinations from around the world.

For each destination, provide:
- Destination name (city and country)
- Key highlights (3-5 main attractions or experiences)
- Best time to visit (specific months or season)
- Ideal duration (recommended days to spend)
- Brief description (2-3 sentences about why this destination is special)

Include a diverse mix of destinations: beaches, mountains, cultural cities, adventure spots, and natural wonders.

Return ONLY valid JSON without any markdown formatting or extra text.`,
      config: {
        responseMimeType: "application/json",
        responseSchema: {
          type: Type.OBJECT,
          properties: {
            suggestions: {
              type: Type.ARRAY,
              items: {
                type: Type.OBJECT,
                properties: {
                  destination: {
                    type: Type.STRING,
                    description: "Full destination name (e.g., 'Paris, France')"
                  },
                  highlights: {
                    type: Type.ARRAY,
                    items: { type: Type.STRING },
                    description: "List of 3-5 key attractions or experiences"
                  },
                  bestTime: {
                    type: Type.STRING,
                    description: "Best time to visit (e.g., 'March to May', 'October to February')"
                  },
                  duration: {
                    type: Type.STRING,
                    description: "Recommended duration (e.g., '3-5 days', '1 week')"
                  },
                  description: {
                    type: Type.STRING,
                    description: "Brief 2-3 sentence description of the destination"
                  },
                  category: {
                    type: Type.STRING,
                    description: "Type of destination (e.g., 'Beach', 'Cultural', 'Adventure', 'Nature')"
                  },
                },
                required: ["destination", "highlights", "bestTime", "duration", "description", "category"],
              },
            },
          },
          required: ["suggestions"],
        },
      },
    });

    let fullText = aiResponse?.text || aiResponse?.output_text || JSON.stringify(aiResponse);
    const parsedData = JSON.parse(fullText);

    console.log(`AI generated ${parsedData.suggestions?.length || 0} suggestions`);

    // Ensure we have exactly 10 suggestions
    if (!parsedData.suggestions || parsedData.suggestions.length === 0) {
      console.error("No suggestions generated by AI");
      throw new ApiError(500, "Failed to generate trip suggestions");
    }

    // Limit to 10 suggestions
    const limitedSuggestions = parsedData.suggestions.slice(0, 10);

    // Enrich each suggestion with an image
    const enrichedSuggestions = await Promise.all(
      limitedSuggestions.map(async (suggestion) => {
        const imageUrl = await getImageFromUnsplash(suggestion.destination).catch((err) => {
          console.log(`Warning: Failed to fetch image for ${suggestion.destination}:`, err.message);
          return null;
        });

        return {
          ...suggestion,
          imageUrl: imageUrl || null,
        };
      })
    );

    console.log(`Success: Generated ${enrichedSuggestions.length} trip suggestions with images`);

    return res
      .status(200)
      .json(
        new ApiResponse(
          200,
          { suggestions: enrichedSuggestions },
          "Trip suggestions generated successfully"
        )
      );

  } catch (error) {
    console.error("Suggested Trips Error:", error.message);
    console.error("Stack:", error.stack);

    if (error.message?.includes("API")) {
      throw new ApiError(503, "AI service temporarily unavailable. Please try again.");
    } else if (error.message?.includes("JSON")) {
      throw new ApiError(500, "Failed to process AI response. Please try again.");
    } else if (error instanceof ApiError) {
      throw error;
    } else {
      throw new ApiError(500, "Failed to generate trip suggestions. Please try again.");
    }
  }
});

export { getSuggestedTrips };